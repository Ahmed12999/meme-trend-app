import streamlit as st
import requests
import json

# üëâ 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 = "sk-..."

st.set_page_config(page_title="AI Coin Advisor (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)", layout="centered")
st.title("üß† AI Coin Advisor (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)")

coin = st.text_input("üîé ‡¶ï‡ßü‡ßá‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßã (‡¶Ø‡ßá‡¶Æ‡¶®: btc, eth, pepe, sol)").lower()

if st.button("üìä AI ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì"):
    if not coin:
        st.warning("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßü‡ßá‡¶® ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßã!")
    else:
        with st.spinner("AI ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶Ü‡¶®‡¶õ‡ßá..."):

            url = f"https://api.coingecko.com/api/v3/coins/{coin}?localization=false&tickers=false&market_data=true"
            response = requests.get(url)

            if response.status_code != 200:
                st.error("‚ùå Coin ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø ‡¶¨‡¶æ API error")
            else:
                data = response.json()
                name = data["name"]
                price = data["market_data"]["current_price"]["usd"]
                change_1h = data["market_data"]["price_change_percentage_1h_in_currency"]["usd"]
                change_24h = data["market_data"]["price_change_percentage_24h_in_currency"]["usd"]
                market_cap = data["market_data"]["market_cap"]["usd"] / 1e9

                prompt = f"""
{name} ‡¶ï‡ßü‡ßá‡¶®‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ${price:.3f}, 
‡ßß ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡ßü ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® {change_1h:.2f}%, 
‡ß®‡ß™ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ‡ßü ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® {change_24h:.2f}% 
‡¶è‡¶¨‡¶Ç ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü ‡¶ï‡ßç‡¶Ø‡¶æ‡¶™ ${market_cap:.2f}B‡•§

‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü ‡¶¨‡¶≤‡ßã ‚Äî ‡¶è‡¶ñ‡¶® ‡¶ï‡¶ø‡¶®‡¶¨‡ßã, ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßã, ‡¶®‡¶æ ‡¶π‡ßã‡¶≤‡ßç‡¶° ‡¶ï‡¶∞‡¶¨‡ßã‡•§ ‡¶ü‡ßç‡¶∞‡ßá‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Æ‡¶§ ‡¶Ü‡¶§‡ßç‡¶Æ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßÄ ‡¶≠‡¶æ‡¶∑‡¶æ‡ßü ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ï‡¶∞‡ßã‡•§
                """

                headers = {
                    "Content-Type": "application/json",
                    "Authorization": f"Bearer {OPENAI_API_KEY}"
                }

                payload = {
                    "model": "gpt-3.5-turbo",
                    "messages": [
                        {"role": "user", "content": prompt}
                    ],
                    "max_tokens": 200,
                    "temperature": 0.7
                }

                ai_res = requests.post("https://api.openai.com/v1/chat/completions",
                                       headers=headers, data=json.dumps(payload))

                if ai_res.status_code == 200:
                    ai_text = ai_res.json()['choices'][0]['message']['content']
                    st.success("‚úÖ AI ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:")
                    st.markdown(f"**{ai_text}**")
                else:
                    st.error(f"‚ùå GPT API Error: {ai_res.status_code}")
                  
