import streamlit as st
import requests

st.set_page_config(page_title="ржорж┐ржо ржХрзЯрзЗржи ржорж╛рж░рзНржХрзЗржЯ ржмрж┐рж╢рзНрж▓рзЗрж╖ржХ", page_icon="ЁЯУИ")
st.title("ЁЯкЩ ржорж┐ржо ржХрзЯрзЗржи ржорж╛рж░рзНржХрзЗржЯ ржмрж┐рж╢рзНрж▓рзЗрж╖ржХ")
st.subheader("DexScreener API ржжрж┐рзЯрзЗ рж░рж┐рзЯрзЗрж▓-ржЯрж╛ржЗржо ржЯрзНрж░рзЗржирзНржб ржжрзЗржЦрзБржи")

token_name = st.text_input("тЬПя╕П ржорж┐ржо ржХрзЯрзЗржирзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи (ржпрзЗржоржи: pepe, bonk, doge)")

if st.button("ЁЯФН ржЯрзНрж░рзЗржирзНржб ржжрзЗржЦрзБржи"):
    if not token_name:
        st.warning("тЪая╕П ржжрзЯрж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржЯрзЛржХрзЗржирзЗрж░ ржирж╛ржо ржжрж┐ржи!")
    else:
        url = f"https://api.dexscreener.com/latest/dex/search/?q={token_name.lower()}"
        try:
            response = requests.get(url)
            data = response.json()

            if 'pairs' not in data or len(data['pairs']) == 0:
                st.error(f"'{token_name}' ржЯрзЛржХрзЗржи ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ ЁЯШУ")
            else:
                pair = data['pairs'][0]
                name = pair['baseToken']['name']
                symbol = pair['baseToken']['symbol']
                price = pair['priceUsd']
                chain = pair['chainId']
                mcap = pair.get('fdv', 'N/A')
                volume = pair['volume']['h24']
                price_change = float(pair['priceChange']['h1'])

                trend = "ЁЯУИ UP" if price_change > 0 else "ЁЯУЙ DOWN"

                st.success(f"тЬЕ **{name} ({symbol})** ржПрж░ рждржерзНржп")
                st.markdown(f"""
                - ЁЯМР **ржЪрзЗржЗржи:** {chain}  
                - ЁЯТ╡ **ржжрж╛ржо:** ${price}  
                - ЁЯУК **рзз ржШржгрзНржЯрж╛рзЯ ржкрж░рж┐ржмрж░рзНрждржи:** {price_change:.2f}%  
                - ЁЯУж **рзирзк ржШржгрзНржЯрж╛рж░ ржнрж▓рж┐ржЙржо:** ${volume:,}  
                - ЁЯзв **ржорж╛рж░рзНржХрзЗржЯ ржХрзНржпрж╛ржк (FDV):** {mcap}  
                - ЁЯУб **ржЯрзНрж░рзЗржирзНржб:** {trend}
                """)
        except Exception as e:
            st.error(f"тЭМ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ: {e}")
          
