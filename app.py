import streamlit as st
import requests
import pandas as pd

# RSI ржбрж┐рж╕рж┐рж╢ржи ржлрж╛ржВрж╢ржи
def ai_decision(rsi, price_change, volume):
    if rsi > 70 and price_change < 0:
        return "ЁЯФ┤ ржПржЦржи ржмрж┐ржХрзНрж░рж┐ ржХрж░рзБржи (SELL) - ржорж╛рж░рзНржХрзЗржЯ ржбрж╛ржЙржи ржЯрзНрж░рзЗржирзНржбрзЗ ржПржмржВ Overbought ржЕржмрж╕рзНржерж╛ред"
    elif rsi < 30 and price_change > 0:
        return "ЁЯЯв ржПржЦржи ржХрж┐ржирзБржи (BUY) - ржжрж╛ржо ржмрж╛ржбрж╝ржЫрзЗ ржПржмржВ Oversold, ржнрж╛рж▓рзЛ рж╕рзБржпрзЛржЧред"
    elif 30 <= rsi <= 70 and abs(price_change) < 1:
        return "ЁЯЯб ржПржЦржи HOLD ржХрж░рж╛ ржирж┐рж░рж╛ржкржж - ржорж╛рж░рзНржХрзЗржЯ рж╕рзНржерж┐рж░ ржПржмржВ ржирж┐рж░ржкрзЗржХрзНрж╖ RSIред"
    else:
        return "тЪая╕П ржорж╛рж░рзНржХрзЗржЯ ржЕржирж┐рж╢рзНржЪрж┐ржд, рж╕рждрж░рзНржХ ржерж╛ржХрзБржиред"

# ржкрзЗржЗржЬ рж╕рзЗржЯржЖржк
st.set_page_config(page_title="AI ржХрзНрж░рж┐ржкрзНржЯрзЛ ржмрж┐рж╢рзНрж▓рзЗрж╖ржХ", page_icon="ЁЯдЦ")
st.title("ЁЯУК AI ржХрзНрж░рж┐ржкрзНржЯрзЛ ржорж╛рж░рзНржХрзЗржЯ ржмрж┐рж╢рзНрж▓рзЗрж╖ржХ (Coingecko ржнрж┐рждрзНрждрж┐ржХ)")

# ржЗржЙржЬрж╛рж░ ржЗржиржкрзБржЯ
token_name = st.text_input("ЁЯФН ржХржпрж╝рзЗржирзЗрж░ ржирж╛ржо рж▓рж┐ржЦрзБржи (ржпрзЗржоржи: pi, pepe, bonk, doge)")

if st.button("ЁЯФО CoinGecko ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржЖржирзБржи") and token_name:
    try:
        # CoinGecko Search API
        search_url = f"https://api.coingecko.com/api/v3/search?query={token_name}"
        search_resp = requests.get(search_url).json()
        results = search_resp.get("coins", [])

        if not results:
            st.warning(f"'{token_name}' рж╕ржорзНржкрж░рзНржХрж┐ржд ржХрзЛржирзЛ ржХржпрж╝рзЗржи ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред")
        else:
            coin_id = results[0]['id']  # ржкрзНрж░ржержо рж░рзЗржЬрж╛рж▓рзНржЯ ржзрж░рж▓рж╛ржо
            coin_url = f"https://api.coingecko.com/api/v3/coins/{coin_id}?localization=false&tickers=false&market_data=true"
            data = requests.get(coin_url).json()

            name = data.get("name", "Unknown")
            symbol = data.get("symbol", "").upper()
            price = data['market_data']['current_price']['usd']
            volume = data['market_data']['total_volume']['usd']
            price_change = data['market_data']['price_change_percentage_1h_in_currency']['usd']

            # RSI ржЖржорж░рж╛ ржЕржирзБржорж╛ржи ржХрж░ржмрзЛ (ржХрж╛рж░ржг Coingecko ржЪрж╛рж░рзНржЯ ржжрзЗржпрж╝ ржирж╛)
            rsi_value = 50
            signal = ai_decision(rsi_value, price_change, volume)

            st.success(f"ЁЯУИ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг: {name} ({symbol})")
            st.markdown(f'''
            - ЁЯТ░ ржжрж╛ржо: ${price:.4f}  
            - ЁЯФД рзз ржШржгрзНржЯрж╛рж░ ржЪрзЗржЮрзНржЬ: {price_change:.2f}%  
            - ЁЯУж ржнрж▓рж┐ржЙржо: ${volume:,.0f}  
            - ЁЯУИ RSI (Estimate): {rsi_value}  
            - ЁЯдЦ AI ржбрж┐рж╕рж┐рж╢ржи: **{signal}**
            ''')
    except Exception as e:
        st.error(f"тЭМ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ: {e}")
        
