def ai_decision(rsi, macd, signal, price_change, volume):
    decision = ""

    if rsi < 30 and macd > signal:
        decision = "RSI oversold ржПржмржВ MACD positive тЖТ ржПржЦржи ржХрж┐ржирждрзЗ ржкрж╛рж░рзЗржиред"
    elif rsi > 70 and macd < signal:
        decision = "RSI overbought ржПржмржВ MACD negative тЖТ ржПржЦржи ржмрж┐ржХрзНрж░рж┐ ржХрж░рж╛ ржнрж╛рж▓рзЛред"
    else:
        decision = "ржорж╛рж░рзНржХрзЗржЯ ржорж╛ржЭрж╛ржорж╛ржЭрж┐ ржЕржмрж╕рзНржерж╛рзЯ тЖТ рж╣рзЛрж▓рзНржб ржХрж░рж╛ржЗ ржнрж╛рж▓рзЛред"

    if volume > 1000000:
        decision += " ЁЯТб Volume ржмрзЗрж╢рж┐ тЖТ ржорзБржнржорзЗржирзНржЯ strong рж╣рждрзЗ ржкрж╛рж░рзЗред"
    return decision

def bollinger_breakout_signal(price, upper_band, lower_band):
    if price > upper_band:
        return "ЁЯУИ ржЖржкрж╛рж░ ржмрзНржпрж╛ржирзНржб ржмрзНрж░рзЗржХржЖржЙржЯ тЖТ ржжрж╛ржо ржмрж╛рзЬрждрзЗ ржкрж╛рж░рзЗред"
    elif price < lower_band:
        return "ЁЯУЙ рж▓рзЛрзЯрж╛рж░ ржмрзНржпрж╛ржирзНржб ржмрзНрж░рзЗржХржбрж╛ржЙржи тЖТ ржжрж╛ржо ржХржорждрзЗ ржкрж╛рж░рзЗред"
    else:
        return "ЁЯФН ржмрзНрж░рзЗржХржЖржЙржЯ рж╣рзЯржирж┐ тЖТ рж╕рж╛ржЗржбржУрзЯрзЗ ржорж╛рж░рзНржХрзЗржЯред"
