def ai_decision(rsi, macd, signal_line, price_change, volume):
    trend_signal = ""
    if macd.iloc[-1] > signal_line.iloc[-1]:
        trend_signal = "ЁЯУИ MACD ржЗржЩрзНржЧрж┐ржд ржХрж░ржЫрзЗ ржжрж╛ржо ржмрж╛ржбрж╝рждрзЗ ржкрж╛рж░рзЗред"
    else:
        trend_signal = "ЁЯУЙ MACD ржЗржЩрзНржЧрж┐ржд ржХрж░ржЫрзЗ ржжрж╛ржо ржХржорждрзЗ ржкрж╛рж░рзЗред"

    if rsi > 70 and price_change < 0:
        return f"ЁЯФ┤ ржПржЦржи ржмрж┐ржХрзНрж░рж┐ ржХрж░рзБржи (SELL) - Overbought ржПржмржВ ржжрж╛ржо ржХржоржЫрзЗред\n{trend_signal}"
    elif rsi < 30 and price_change > 0:
        return f"ЁЯЯв ржПржЦржи ржХрж┐ржирзБржи (BUY) - Oversold ржПржмржВ ржжрж╛ржо ржмрж╛ржбрж╝ржЫрзЗред\n{trend_signal}"
    elif 30 <= rsi <= 70 and abs(price_change) < 1:
        return f"ЁЯЯб HOLD - ржорж╛рж░рзНржХрзЗржЯ рж╕рзНржерж┐рж░ред\n{trend_signal}"
    else:
        return f"тЪая╕П ржЕржирж┐рж╢рзНржЪрж┐ржд ржЕржмрж╕рзНржерж╛, рж╕рждрж░рзНржХ ржерж╛ржХрзБржиред RSI: {rsi:.2f}\n{trend_signal}"

def bollinger_breakout_signal(close_price, upper_band, lower_band):
    """
    ржжрж╛ржо ржпржжрж┐ ржЙржкрж░рзЗрж░ ржмрзНржпрж╛ржирзНржб ржЫрж╛ржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржпрж╝ тЖТ ржмрзНрж░рзЗржХржЖржЙржЯ ржЖржк (Buy рж╕рж┐ржЧржирзНржпрж╛рж▓)
    ржжрж╛ржо ржпржжрж┐ ржирж┐ржЪрзЗрж░ ржмрзНржпрж╛ржирзНржбрзЗрж░ ржирж┐ржЪрзЗ ржпрж╛ржпрж╝ тЖТ ржмрзНрж░рзЗржХржЖржЙржЯ ржбрж╛ржЙржи (Sell рж╕рж┐ржЧржирзНржпрж╛рж▓)
    ржЕржирзНржпржерж╛ржпрж╝ тЖТ ржХрзЛржирзЛ ржмрзНрж░рзЗржХржЖржЙржЯ ржирзЗржЗ
    """
    if close_price > upper_band:
        return "ЁЯФ║ Breakout Up - рж╕ржорзНржнрж╛ржмрзНржп ржжрж╛ржо ржмрж╛ржбрж╝ржмрзЗ"
    elif close_price < lower_band:
        return "ЁЯФ╗ Breakout Down - ржжрж╛ржо ржХржорждрзЗ ржкрж╛рж░рзЗ"
    else:
        return "тЮЦ No Breakout"
